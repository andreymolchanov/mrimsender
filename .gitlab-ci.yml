# include:
#   project: 'ATL-TEAM/gitlab'
#   ref: 'master'
#   file: '/ci/templates/Plugin.JDK11.gitlab-ci.yml'


include:
  - template: Code-Quality.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml

variables:
  MAVEN_OPTS: "--batch-mode"

image: registry-gitlab.corp.mail.ru/atl-team/maven-yarn-docker:3.0.7_JDK11

default:
  tags:
    - docker

cache:
  key: $CI_DEFAULT_BRANCH
  paths:
    - js/node_modules

stages:
  - build
  - test
  - upload

.build:
  stage: build
  script:
    - cd js
    - yarn install --frozen-lockfile --ignore-optional
    - yarn build-prod
    - cd ..
    - atlas-package $MAVEN_OPTS
  artifacts:
    reports:
      junit: target/surefire-reports/*.xml
    name: $CI_PROJECT_NAME
    paths:
      - target/*.jar

build:
  extends:
    - .build

marketplace-build:
  before_script:
    - export SENTRY_DSN=
  extends:
    - .build
  when: manual

mvn-dependency-check:
  stage: test
  # force no dependency
  dependencies: []
  script:
    - atlas-mvn $MAVEN_OPTS org.owasp:dependency-check-maven:check
  rules:
    # always on tags
    - if: $CI_COMMIT_TAG
      when: always
    # if change pom.xml, yarn.lock
    - changes:
        - pom.xml
        - js/yarn.lock
        - ts/yarn.lock
    # all other cases: manual & non-blocking
    - when: manual
      allow_failure: true
  artifacts:
    name: "$CI_JOB_NAME artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    expire_in: 1 day
    reports:
      junit: target/dependency-check-junit.xml
    paths:
      - target/dependency-check-report.html
    when: always

upload:
  stage: upload
  cache: {}
  script:
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file `find ./target -name "*.jar" -maxdepth 1` "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/`find ./target -name "*.jar" -maxdepth 1 -type f -exec basename {} \;`"'
  only:
    refs:
      - tags

secret_detection:
  before_script: []
  cache: {}

sast:
  stage: test

spotbugs-sast:
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  variables:
    FAIL_NEVER: 1
    MAVEN_REPO_PATH: .m2/
    COMPILE: "false"
    SAST_EXCLUDED_PATHS: spec, test, tests, tmp, .m2

code_quality:
  stage: test
  before_script:
    - ls -a
    - ls -a /root
    - ls -a /root/.m2
    - cp $CODECLIMATE_CONFIG1 ./.codeclimate.yml
  artifacts:
    paths: 
      - gl-code-quality-report.json

code_quality_html:
  stage: test
  before_script:
    - ls -a
    - ls -a /root
    - ls -a /root/.m2
    - cp $CODECLIMATE_CONFIG1 ./.codeclimate.yml
  extends: code_quality
  variables:
    REPORT_FORMAT: html
  artifacts:
    paths: 
      - gl-code-quality-report.html
  when: manual
