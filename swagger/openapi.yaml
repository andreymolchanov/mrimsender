openapi: 3.0.1
info:
  description: todo
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: "Mail.ru Plugin: Mrimsender"
  version: 6.4.2
servers:
- description: Plugin Endpoint URL
  url: https://jira.mail.ru/rest/contracts/1.0
paths:
  /admin/user:
    get:
      operationId: getList
      parameters:
      - in: query
        name: page
        schema:
          type: integer
          format: int32
      - in: query
        name: limit
        schema:
          type: integer
          format: int32
      - in: query
        name: filter
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataListDTOUserDto'
          description: default response
  /admin/user/many:
    get:
      operationId: getMany
      parameters:
      - in: query
        name: "ids[]"
        schema:
          type: array
          items:
            type: string
          uniqueItems: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataListDTOUserDto'
          description: default response
  /admin/user/{userKey}:
    get:
      operationId: getOne
      parameters:
      - in: path
        name: userKey
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataDTOUserDto'
          description: default response
  /chats/chatCreationData/users:
    get:
      operationId: getAvailableChatMembers
      parameters:
      - in: query
        name: searchText
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatMemberDto'
          description: default response
  /chats/chatCreationData/{issueKey}:
    get:
      operationId: getChatCreationData
      parameters:
      - in: path
        name: issueKey
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatCreationDataDto'
          description: default response
  /chats/chatData/{issueKey}:
    get:
      operationId: findChatData
      parameters:
      - in: path
        name: issueKey
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMetaDto'
          description: default response
  /chats/createChat/{issueKey}:
    post:
      operationId: createChat
      parameters:
      - in: path
        name: issueKey
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                memberIds:
                  type: array
                  items:
                    type: integer
                    format: int64
                name:
                  type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMetaDto'
          description: default response
  /external/notifications/bitbucket:
    post:
      operationId: bitbucketProjectEventsWebHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BitbucketEventDto'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BitbucketWebhookResultDto'
          description: default response
  /preferences:
    post:
      operationId: updateMrimEnabled
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                enabled:
                  type: boolean
                isChatCreationAllowed:
                  type: boolean
                mrim_login:
                  type: string
      responses:
        default:
          content:
            application/json: {}
          description: default response
components:
  schemas:
    BitbucketEventDto:
      type: object
      properties:
        date:
          type: string
        test:
          type: boolean
    BitbucketWebhookResultDto:
      type: object
      properties:
        resultInfo:
          type: string
    ChatCreationDataDto:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/ChatMemberDto'
        name:
          type: string
    ChatMemberDto:
      type: object
      properties:
        avatarUrl:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
    ChatMetaDto:
      type: object
      properties:
        link:
          type: string
        members:
          type: array
          items:
            $ref: '#/components/schemas/ChatMemberDto'
        name:
          type: string
    DataDTOUserDto:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserDto'
        validUntil:
          type: string
          format: date-time
    DataListDTOUserDto:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserDto'
        total:
          type: integer
          format: int32
        validUntil:
          type: string
          format: date-time
    UserDto:
      type: object
      properties:
        avatarUrl:
          type: string
        displayName:
          type: string
        displayNameWithEmail:
          type: string
        email:
          type: string
        id:
          type: string
        name:
          type: string
        profileUrl:
          type: string
        type:
          type: string
        userKey:
          type: string
